'use client'

import styles from './TriSwitch.module.css'
import { useState } from 'react'

export default function TriSwitch() {

    // 0 = design, 1 = draw, 2 = code
    const [mode, setMode] = useState(0)

    const changeMode = (newMode) => {
        setMode(newMode)
        // console.log(mode)
    }

    return (
        <div className={`${styles.container}`}>
            <button className={`${styles.button} ${mode == 1 ? styles.selected : ''}`} onClick={() => changeMode(1)}>
                <svg className={`${styles.icon}`}width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                    <path d="M13.407 5.05999C14.017 4.93699 14.634 4.98099 15.064 5.40299L15.199 5.55299C15.476 5.91399 15.515 6.34299 15.407 6.75699C15.292 7.19699 15.01 7.64399 14.673 8.07099C13.993 8.93099 12.933 9.89999 11.925 10.831C10.894 11.783 9.915 12.698 9.319 13.493C9.019 13.893 8.853 14.217 8.802 14.463C8.758 14.673 8.799 14.803 8.922 14.923L8.987 14.975C9.059 15.019 9.154 15.037 9.3 15.014C9.517 14.98 9.805 14.859 10.166 14.636C10.886 14.191 11.727 13.453 12.611 12.67C13.473 11.907 14.379 11.099 15.181 10.594C15.581 10.342 15.998 10.137 16.402 10.067C16.829 9.99299 17.272 10.069 17.625 10.413L17.727 10.525C17.947 10.796 18.023 11.118 17.993 11.443C17.961 11.787 17.81 12.127 17.629 12.436C17.266 13.053 16.666 13.732 16.114 14.358C15.54 15.009 15.014 15.609 14.711 16.125C14.56 16.382 14.493 16.574 14.481 16.706C14.471 16.812 14.493 16.869 14.553 16.926L14.607 16.966C14.681 17.004 14.821 17.028 15.081 16.935C15.437 16.807 15.934 16.479 16.546 15.835C16.6388 15.7463 16.7621 15.6966 16.8904 15.6963C17.0188 15.696 17.1424 15.7451 17.2355 15.8334C17.3287 15.9216 17.3844 16.0424 17.391 16.1706C17.3976 16.2988 17.3546 16.4246 17.271 16.522C16.605 17.224 15.98 17.675 15.418 17.876C14.883 18.068 14.338 18.049 13.933 17.713L13.853 17.642C13.7162 17.5104 13.6117 17.349 13.5477 17.1703C13.4837 16.9916 13.4619 16.8005 13.484 16.612C13.517 16.268 13.667 15.928 13.848 15.619C14.211 15.002 14.812 14.322 15.364 13.696C15.938 13.045 16.464 12.446 16.766 11.93C16.918 11.672 16.986 11.481 16.998 11.349C17.005 11.269 16.994 11.217 16.963 11.172L16.925 11.127C16.855 11.059 16.763 11.019 16.572 11.052C16.359 11.089 16.072 11.213 15.714 11.44C14.997 11.891 14.159 12.634 13.274 13.418C12.412 14.182 11.5 14.988 10.69 15.488C10.286 15.737 9.864 15.938 9.453 16.002C9.073 16.062 8.686 16.002 8.358 15.755L8.222 15.637C7.82 15.243 7.72 14.75 7.823 14.257C7.92 13.797 8.19 13.334 8.519 12.894C9.182 12.009 10.237 11.029 11.247 10.096C12.28 9.14199 13.27 8.23399 13.889 7.45099C14.199 7.05799 14.378 6.74099 14.439 6.50499C14.479 6.35299 14.467 6.25899 14.422 6.18499L14.365 6.11599C14.283 6.03599 14.081 5.94399 13.605 6.03999C13.137 6.13399 12.514 6.39199 11.742 6.84299C10.205 7.74099 8.19 9.33899 5.849 11.629C5.75379 11.7196 5.62671 11.7692 5.49526 11.7668C5.36382 11.7644 5.23859 11.7104 5.14669 11.6164C5.05479 11.5224 5.0036 11.396 5.00422 11.2645C5.00485 11.1331 5.05722 11.0071 5.15 10.914C7.52 8.59499 9.6 6.93399 11.237 5.97899C12.052 5.50299 12.787 5.18599 13.407 5.05999Z" fill="black"/>
                </svg>
            </button>
            <button className={`${styles.button} ${mode == 0 ? styles.selected : ''}`} onClick={() => changeMode(0)}>
                <svg className={`${styles.icon}`}width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                    <path d="M12.11 13.956C11.67 12.835 12.728 11.726 13.848 12.071L13.956 12.109L18.106 13.739L18.221 13.79C19.357 14.346 19.248 16.044 18.003 16.427L16.798 16.799L16.428 18.004C16.031 19.294 14.232 19.36 13.739 18.106L12.11 13.956ZM13.59 13.04C13.5132 13.0102 13.4293 13.0033 13.3486 13.0203C13.2679 13.0373 13.194 13.0774 13.1357 13.1357C13.0774 13.194 13.0373 13.2679 13.0203 13.3486C13.0033 13.4293 13.0102 13.5132 13.04 13.59L14.67 17.74C14.808 18.09 15.288 18.096 15.445 17.778L15.472 17.71L15.998 15.999L17.709 15.472C17.7933 15.4462 17.8676 15.3948 17.9214 15.3249C17.9752 15.255 18.0059 15.1701 18.0093 15.082C18.0128 14.9939 17.9887 14.9069 17.9404 14.833C17.8921 14.7592 17.8221 14.7022 17.74 14.67L13.59 13.04ZM16.5 6C16.8978 6 17.2794 6.15804 17.5607 6.43934C17.842 6.72064 18 7.10218 18 7.5V8.5C18 8.89782 17.842 9.27936 17.5607 9.56066C17.2794 9.84196 16.8978 10 16.5 10H10V16.5C10 16.8978 9.84196 17.2794 9.56066 17.5607C9.27936 17.842 8.89782 18 8.5 18H7.5C7.10218 18 6.72064 17.842 6.43934 17.5607C6.15804 17.2794 6 16.8978 6 16.5V7.5C6 7.10218 6.15804 6.72064 6.43934 6.43934C6.72064 6.15804 7.10218 6 7.5 6H16.5ZM7 16.5C7 16.6326 7.05268 16.7598 7.14645 16.8536C7.24021 16.9473 7.36739 17 7.5 17H8.5C8.63261 17 8.75979 16.9473 8.85355 16.8536C8.94732 16.7598 9 16.6326 9 16.5V15H8.5C8.36739 15 8.24021 14.9473 8.14645 14.8536C8.05268 14.7598 8 14.6326 8 14.5C8 14.3674 8.05268 14.2402 8.14645 14.1464C8.24021 14.0527 8.36739 14 8.5 14H9V13H8.5C8.36739 13 8.24021 12.9473 8.14645 12.8536C8.05268 12.7598 8 12.6326 8 12.5C8 12.3674 8.05268 12.2402 8.14645 12.1464C8.24021 12.0527 8.36739 12 8.5 12H9V10H7V16.5ZM7.5 7C7.36739 7 7.24021 7.05268 7.14645 7.14645C7.05268 7.24021 7 7.36739 7 7.5V9H9V7H7.5ZM10 9H12V8.5C12 8.36739 12.0527 8.24021 12.1464 8.14645C12.2402 8.05268 12.3674 8 12.5 8C12.6326 8 12.7598 8.05268 12.8536 8.14645C12.9473 8.24021 13 8.36739 13 8.5V9H14V8.5C14 8.36739 14.0527 8.24021 14.1464 8.14645C14.2402 8.05268 14.3674 8 14.5 8C14.6326 8 14.7598 8.05268 14.8536 8.14645C14.9473 8.24021 15 8.36739 15 8.5V9H16.5C16.6326 9 16.7598 8.94732 16.8536 8.85355C16.9473 8.75979 17 8.63261 17 8.5V7.5C17 7.36739 16.9473 7.24021 16.8536 7.14645C16.7598 7.05268 16.6326 7 16.5 7H10V9Z" fill="black"/>
                </svg>
            </button>
            <button className={`${styles.button} ${mode == 2 ? styles.selected : ''}`} onClick={() => changeMode(2)}>
                <svg className={`${styles.icon}`}width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                    <path d="M13.631 6.01801C13.7418 6.04835 13.8388 6.11591 13.9056 6.20934C13.9724 6.30277 14.0051 6.41636 13.998 6.53101L13.982 6.63101L10.982 17.631L10.946 17.726C10.8914 17.8389 10.7963 17.9271 10.6797 17.9732C10.563 18.0193 10.4334 18.0198 10.3163 17.9748C10.1993 17.9297 10.1035 17.8423 10.0479 17.73C9.99222 17.6176 9.98085 17.4884 10.016 17.368L13.016 6.36801L13.053 6.27301C13.1053 6.17048 13.1913 6.08912 13.2966 6.04266C13.4019 5.99621 13.52 5.9875 13.631 6.01801ZM8.224 8.58201C8.32026 8.51953 8.43506 8.492 8.54919 8.50401C8.66332 8.51602 8.76987 8.56685 8.85102 8.648C8.93216 8.72915 8.98299 8.83569 8.99501 8.94982C9.00702 9.06396 8.97948 9.17875 8.917 9.27501L8.853 9.35401L6.206 12L8.853 14.646C8.90076 14.6921 8.93885 14.7473 8.96505 14.8083C8.99126 14.8693 9.00505 14.9349 9.00563 15.0013C9.0062 15.0677 8.99355 15.1335 8.96841 15.195C8.94327 15.2564 8.90614 15.3123 8.8592 15.3592C8.81225 15.4062 8.75643 15.4433 8.69498 15.4684C8.63353 15.4936 8.56769 15.5062 8.5013 15.5056C8.43491 15.5051 8.3693 15.4913 8.3083 15.4651C8.2473 15.4389 8.19212 15.4008 8.146 15.353L5.146 12.353C5.05226 12.2592 4.99961 12.1321 4.99961 11.9995C4.99961 11.8669 5.05226 11.7398 5.146 11.646L8.146 8.64601L8.224 8.58201ZM15.146 8.64601C15.2398 8.55228 15.3669 8.49962 15.4995 8.49962C15.6321 8.49962 15.7592 8.55228 15.853 8.64601L18.853 11.646C18.9467 11.7398 18.9994 11.8669 18.9994 11.9995C18.9994 12.1321 18.9467 12.2592 18.853 12.353L15.853 15.353L15.775 15.418C15.6789 15.4823 15.5634 15.5113 15.4483 15.5001C15.3332 15.4888 15.2255 15.438 15.1437 15.3562C15.0618 15.2745 15.0109 15.1669 14.9994 15.0518C14.988 14.9367 15.0168 14.8212 15.081 14.725L15.146 14.646L17.792 12L15.146 9.35401C15.0523 9.26025 14.9996 9.13309 14.9996 9.00051C14.9996 8.86793 15.0523 8.74078 15.146 8.64701" fill="black"/>
                </svg>
            </button>
        </div>
    )
}

